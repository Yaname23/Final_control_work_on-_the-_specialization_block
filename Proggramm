""Написать программу, имитирующую работу реестра домашних животных.
В программе должен быть реализован следующий функционал:
14.1 Завести новое животное
14.2 определять животное в правильный класс
14.3 увидеть список команд, которое выполняет животное
14.4 обучить животное новым командамgggg
14.5 Реализовать навигацию по меню"""
import datetime
import os
import json
import path

count = 0

# hello = int(input("Выберите нужное:\n1.Добавить животное\n2.увидеть список команд которые выполняет животное\n3.Обучить новым командам\n4.Выход\n:"))
class Animals:
    def __init__(self,count: int, name: str, animal_type: str, species: str, birthday: str, commands: str):
        self.count = count
        self.name = name
        self.animal_type = animal_type
        self.species = species
        self.birthday = birthday
        self.commands = commands

    def __str__(self):
        return f'{self.count = },{self.species = }, {self.animal_type = }, {self.name = }, {self.birthday = }, {self.commands = }'

def add_ani():
    global count
    count += 1
    name = input("Введите имя животного: ")
    animal_guess= int(input("Выберите добавляемое животное:\n1.Кошка\n2.Собака\n3.Хомяк\n4.Лошадь\n5.Осёл\n6.Верблюд\n:"))
    if animal_guess == 1:
        animal_type = 'Кошка'
        species = 'Домашнее животное'

    if animal_guess == 2:
        animal_type = 'Собака'
        species = 'Домашнее животное'

    if animal_guess == 3:
        animal_type = 'Хомяк'
        species = 'Домашнее животное'

    if animal_guess == 4:
        animal_type = 'Лошадь'
        species = 'Вьючное животное'

    if animal_guess == 5:
        animal_type = 'Осёл'
        species = 'Вьючное животное'

    if animal_guess == 6:
        animal_type = 'Верблюд'
        species = 'Вьючное животное'

    commands = input("Введите комманду, которой обучено животное:  ")
    birthday = input('Введите дату рождения животного в формате: *ДД.ММ.ГГГГ*.:  ')
    try:
        birthday = datetime.datetime.strptime(birthday, '%d.%m.%Y')
        birthday = birthday.strftime("%d.%m.%Y")
    except ValueError as e:
        print('Формат даты не соответствует')
        exit()
    print(f"\nДобавлено животное №{count}:\n{species}\n{animal_type.title()}\nКличка: {name.title()}\nДата рождения: {birthday}\nЗнает команды: {commands}")
    return Animals(count, name, species, animal_type, birthday, commands)
def show_commands():
    with open("animals.json", "r", encoding='UTF-8') as my_file:
        animals_json = my_file.read()

    animals = json.loads(animals_json)

    for key, value in animals.items():
        for key2, value2 in value.items():
            if key2 == 'commands':
                print(f'{key} знает команды: {value2}')


def new_commands():
    with open('animals.json', 'r', encoding='UTF-8') as file:
        animals = json.load(file)

    for key, value in animals.items():
        for key2, value2 in value.items():
            if key2 == 'commands':
                print(f'{key} знает команды: {value2}')
    animal_to_learn = input('Как зовут животное, которому Вы хотите добавить команду?\nНапишите имя: ')
    ani_name = animal_to_learn.title()
    if key == ani_name:
        command_to_learn = input('Какую команду вы хотите добавить? ')

        for key, value in animals.items():
            for key2, value2 in value.items():
                if key2 == 'commands':
                    print('Команда успешно добавлена!')
                    with open('animals.json', 'w', encoding='UTF-8') as file:
                        json.dump(animals, file, indent=4, ensure_ascii=False)
                else:
                     print('Такого животного нет в реестре.')
def load_json(path):
    if os.path.exists(path):
        with open(path, 'r', encoding='UTF-8') as file:
            data = json.load(file)
    else:
        data = {}
    return data

def save_json(path, animal_db):
    with open(path, 'w', encoding='UTF-8') as file:
        json.dump(animal_db, file, indent=4, ensure_ascii=False)
def menu():
    while True:
        hello = int(input("\nВыберите нужное:\n1.Добавить животное\n2.увидеть список команд которые выполняет животное\n3.Обучить новым командам\n4.Выход\n:"))
        if hello == 1:
            add_ani()
            exit()
        elif hello == 2:
            show_commands()
        elif hello == 3:
            new_commands()
        elif hello == 4:
            print('До свидания!')
            exit()
menu()

if __name__ == '__main__':
    path = 'animals.json'
    animal_db = load_json(path)
    new_animal = add_ani()
    if str(new_animal.name) in animal_db:
        raise Exception('Пользователь c таким именем уже есть в реестре')
    else:
        animal_db[new_animal.name] = {'number': new_animal.name, 'species': new_animal.species,
                                       'type': new_animal.animal_type, 'birthday': new_animal.birthday,
                                       'commands': new_animal.commands}
        save_json(path, animal_db)
